name: CI
env:
  POETRY_VERSION: "1.8.3"

on: [push]
jobs:
  static-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Load cached Poetry installation
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: ${{ runner.os }}-dotlocal-dir-py${{matrix.python-version }}-poetry${{ env.POETRY_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - name: Install dependencies
        run: poetry install
      - name: Lint
        run: |
          # Stop the linting if there are Python syntax errors or undefined names
          poetry run ruff check --select=E9,F63,F7,F82
          # Default set of ruff rules with GitHub Annotations
          poetry run ruff check
      - name: Check types
        run: |
          poetry run mypy
          poetry run mypy install
      - name: Check import order
        run: |
          poetry run isort install


  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Load cached Poetry installation
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: ${{ runner.os }}-dotlocal-dir-py${{matrix.python-version }}-poetry${{ env.POETRY_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest
