name: test

on: [push]
jobs:
  static-checks:
    env:
      POETRY_VERSION: "1.7.1"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Load cached Poetry installation
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: ${{ runner.os }}-dotlocal-dir-py${{matrix.python-version }}-poetry${{ env.POETRY_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --no-root
      - name: Lint
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          poetry run ruff --format=github --select=E9,F63,F7,F82 --target-version=py310 .
          # Default set of ruff rules with GitHub Annotations
          poetry run ruff --format=github --target-version=py310
      - name: Type check
        run: |
          poetry run mypy
      - name: Import order check
        run: |
          poetry run isort install
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install zsh
        # if: ${{ matrix.os == "ubuntu" }}
        run: |
          sudo apt update
          sudo apt install zsh
      - name: Install dotfiles
        run: |
          ./install --email foo@acme.org --confirm-all-stages \
            --no-install-vscode-extensions
